AWSTemplateFormatVersion: "2010-09-09"
Description: References to created ELB

Parameters:
  Env:
    Description: HON, DEV
    Type: String
    Default: DEV

  SystemName:
    Description: Enter SystemName
    Type: String
    Default: sample

  VpcId:
    Description: Select VPCID from SSM Prameter Store.
    Type: AWS::SSM::Parameter::Value<String>
    Default: sample-DEV-ps-vpcid

Resources:
#  TargetGroup01
  sampleTargetGroup01:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      VpcId: !Ref VpcId
      Name: Sub! ${SystemName}-TargetGroup01
      Protocol: HTTP
      Port: 80
      TargetType: ip
      
#  TargetGroup01
  sampleTargetGroup02:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      VpcId: !Ref VpcId
      Name: Sub! ${SystemName}-TargetGroup02
      Protocol: HTTP
      Port: 80
      TargetType: ip

# ALB 
  sampleALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: Sub! ${SystemName}-ALB
      Tags:
        - Key: Name
          Value: Sub! ${SystemName}-ALB
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "deletion_protection.enabled"
          Value: false
        - Key: "idle_timeout.timeout_seconds"
          Value: 60
        - Key: "access_logs.s3.enabled"
          Value: true
        - Key: "access_logs.s3.bucket"
          Value: !Sub "alb-log-${AWS::AccountId}"

      SecurityGroups:
      - !ImportValue ELBIngressGroup
      Subnets: 
      - !ImportValue PublicSubnet1
      - !ImportValue PublicSubnet2


      # HealthCheckProtocol: HTTP
      # HealthCheckPath: "/"
      # HealthCheckPort: "traffic-port"
      # HealthyThresholdCount: 2
      # UnhealthyThresholdCount: 2
      # HealthCheckTimeoutSeconds: 5
      # HealthCheckIntervalSeconds: 10
      # Matcher: 
      #   HttpCode: 200
      Tags: 
        - Key: Name
          Value: sampleTargetGroup
      TargetGroupAttributes: 
        - Key: "deregistration_delay.timeout_seconds"
          Value: 300
        - Key: "stickiness.enabled"
          Value: false
        - Key: "stickiness.type"
          Value: lb_cookie
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: 86400
      Targets: 
        - Id: !ImportValue Rubyweb1
          Port: 80
        - Id: !ImportValue Rubyweb2
          Port: 80

# ALB 
  sampleALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: sampleALB
      Tags:
        - Key: Name
          Value: sampleALB
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "deletion_protection.enabled"
          Value: false
        - Key: "idle_timeout.timeout_seconds"
          Value: 60
      SecurityGroups:
      - !ImportValue ELBIngressGroup
      Subnets: 
      - !ImportValue PublicSubnet1
      - !ImportValue PublicSubnet2

# albListener 
  sampleALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref sampleTargetGroup
          Type: forward
      LoadBalancerArn: !Ref sampleALB
      Port: 80
      Protocol: HTTP
