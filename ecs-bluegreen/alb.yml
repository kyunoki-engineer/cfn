AWSTemplateFormatVersion: "2010-09-09"
Description: References to created ELB

Parameters:
  Env:
    Description: HON, DEV
    Type: String
    Default: DEV

  SystemName:
    Description: Enter SystemName
    Type: String
    Default: sample

  VpcId:
    Description: Select VPCID from SSM Prameter Store.
    Type: AWS::SSM::Parameter::Value<String>
    Default: sample-DEV-ps-vpcid

  GenkoSubnetids: 
    Description: Create a genko subnetids for the VPC in the SSM Parameter Store.
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: sample-DEV-ps-subnetids-genko

Resources:
#  TargetGroup01
  sampleTargetGroup01:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      VpcId: !Ref VpcId
      Name: Sub! ${SystemName}-TargetGroup01
      Protocol: HTTP
      Port: 80
      TargetType: ip
      
#  TargetGroup02
  sampleTargetGroup02:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      VpcId: !Ref VpcId
      Name: Sub! ${SystemName}-TargetGroup02
      Protocol: HTTP
      Port: 8080
      TargetType: ip

# ALB 
  sampleALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: Sub! ${SystemName}-ALB
      Tags:
        - Key: Name
          Value: Sub! ${SystemName}-ALB
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "deletion_protection.enabled"
          Value: false
        - Key: "idle_timeout.timeout_seconds"
          Value: 60
        - Key: "access_logs.s3.enabled"
          Value: true
        - Key: "access_logs.s3.bucket"
          Value: !Sub "alb-log-${AWS::AccountId}"
        - Key: access_logs.s3.prefix
          Value: "dev"
      SecurityGroups:
      - !ImportValue ELBIngressGroup
      Subnets: 
      - !Ref GenkoSubnetids

      # Tags: 
      #   - Key: Name
      #     Value: sampleTargetGroup

      # TargetGroupAttributes: 
      #   - Key: "deregistration_delay.timeout_seconds"
      #     Value: 300
      #   - Key: "stickiness.enabled"
      #     Value: false
      #   - Key: "stickiness.type"
      #     Value: lb_cookie
      #   - Key: "stickiness.lb_cookie.duration_seconds"
      #     Value: 86400

      # Targets: 
      #   - Id: !ImportValue Rubyweb1
      #     Port: 80
      #   - Id: !ImportValue Rubyweb2
      #     Port: 80

# albListener 
  sampleALBListener1:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref sampleTargetGroup01
          Type: forward
      LoadBalancerArn: !Ref sampleALB
      Port: 80
      Protocol: HTTP

# albListener
  sampleALBListener2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref sampleTargetGroup02
          Type: forward
      LoadBalancerArn: !Ref sampleALB
      Port: 8080
      Protocol: HTTP
